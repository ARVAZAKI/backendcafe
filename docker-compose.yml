version: '3.8'

services:
  # Database PostgreSQL
  db:
    image: postgres:17-alpine
    container_name: cafemobile_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-cafemobile}
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=C'
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-cafemobile}']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # .NET API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cafemobile_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Database=${DB_NAME:-cafemobile};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres}
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=${JWT_ISSUER:-CafeMobileAPI}
      - Jwt__Audience=${JWT_AUDIENCE:-CafeMobileApp}
      - Midtrans__ServerKey=${MIDTRANS_SERVER_KEY}
      - Midtrans__ClientKey=${MIDTRANS_CLIENT_KEY}
      - Midtrans__IsProduction=${MIDTRANS_IS_PRODUCTION:-false}
      - Midtrans__MerchantId=${MIDTRANS_MERCHANT_ID}
    ports:
      - '${API_PORT:-8080}:8080'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy (Optional tapi recommended untuk production)
  nginx:
    image: nginx:alpine
    container_name: cafemobile_nginx
    ports:
      - '${NGINX_HTTP_PORT:-80}:80'
      - '${NGINX_HTTPS_PORT:-443}:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
